{"version":3,"sources":["webpack:///./src/pages/perceivable.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/images/text-alternatives.jpg"],"names":["perceivable","render","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","title","keywords","src","Alt","alt","href","role","Component","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","data","query","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","array","arrayOf","Header","siteTitle","react_default","style","background","marginBottom","margin","maxWidth","padding","gatsby_browser_entry","to","color","textDecoration","listStyle","float","display","marginRight","fontSize","Layout","Fragment","header","paddingTop","_755544856","node","p"],"mappings":"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","file":"component---src-pages-perceivable-js-f1da54bb2da96da1757f.js","sourcesContent":["import React, { Component } from 'react';\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\";\nimport Alt from \"../images/text-alternatives.jpg\"\n\nclass perceivable extends Component {\n    render() {\n        return (\n            <Layout>\n            <SEO title=\"Home\" keywords={[`gatsby`, `application`, `react`]} />\n            <div>\n            <h1> Perceivability</h1>\n            <h2> Guideline 1.1: Text Alternatives </h2>\n            <p> Adding alt text means avoiding errors from an Accessibility Scan, but not all alt text is created equally. The text should be functional and provide an equivalent user experience, not necessarily describe the image. (For example, appropriate text alternative for a search button  would be \"search\", not \"magnifying glass\".)</p>\n            {/* resource: https://www.w3.org/WAI/test-evaluate/preliminary/#images */}\n            <img src={Alt} alt=\"text-alternative description from w3.org\" />\n            <p> Here are resources to help you fulfill Level A 1.1: </p>\n            <ol> \n            <li> \n            <a href = \"https://www.a11ywithlindsey.com/blog/writing-alternative-text-matters/\"> Writing Alternative Text Matters by Lindsey Kopacz</a>\n            </li> \n            <li> \n            <a href = \"https://www.w3.org/WAI/tutorials/images/tips/\"> Text Alternatives Tips and Tricks </a>\n            </li> \n            <li> \n            <a href = \"https://support.siteimprove.com/hc/en-gb/articles/115000013031-Accessibility-Image-Alt-text-best-practices\"> Accessibility: Image Alt text best practices </a>\n            </li> \n            </ol>\n            <li> \n            <a href = \"https://webaim.org/standards/wcag/checklist\" role = \"button\"> Checklist</a> \n            </li>\n            <li> \n            <a href =\"https://webaim.org/techniques/alttext/#context\" role = \"button\"> Example </a>\n            </li>\n            <h2> Tools </h2>\n            <ol> \n            <li> \n            <a href = \"http://wave.webaim.org/extension/\"> Wave Toolbar</a>\n            <p> places overlay on current page, revealing images without ALT text</p>\n            </li> \n            <li> \n            <a href = \"https://www.w3.org/WAI/tutorials/images/tips/\"> Text Alternatives Tips and Tricks </a>\n            </li> \n            <li> \n            <a href = \"https://support.siteimprove.com/hc/en-gb/articles/115000013031-Accessibility-Image-Alt-text-best-practices\"> Accessibility: Image Alt text best practices </a>\n            </li> \n            </ol>\n         \n\n            <h2> 1.2 Time-Based Media</h2>\n\n            <h2> 1.3 Adaptable</h2>\n            <h2> 1.4 Distinguishable</h2>\n           \n            </div>\n            </Layout> \n        );\n    }\n}\n\nexport default perceivable;","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: `blue`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n        <ul style={{ listStyle: 'none', float: 'right'}}>\n          <li style={{ display: 'inline-block', marginRight: '1rem'}}><Link style={{color: 'white', textDecoration: 'none', fontSize: 'x-large'}} to=\"/\">Home</Link></li>\n          <li style={{ display: 'inline-block', marginRight: '1rem'}}><Link style={{color: 'white', textDecoration: 'none', fontSize: 'x-large'}} to=\"/about\">About</Link></li>\n          <li style={{ display: 'inline-block', marginRight: '1rem'}}><Link style={{color: 'white', textDecoration: 'none', fontSize: 'x-large'}} to=\"/tools\">Tools</Link></li>\n        </ul>\n      </h1>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: `0 auto`,\n            maxWidth: 960,\n            padding: `0px 1.0875rem 1.45rem`,\n            paddingTop: 0,\n          }}\n        >\n          <main>{children}</main>\n\n           <footer>\n          {/* <Footer></Footer> */}\n          </footer> \n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","module.exports = __webpack_public_path__ + \"static/text-alternatives-899553afcb033974dd26bc7f89b2a565.jpg\";"],"sourceRoot":""}