{"version":3,"sources":["webpack:///./src/pages/tools.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["Tools","_this","_React$Component","call","this","state","count","render","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_3__","_components_seo__WEBPACK_IMPORTED_MODULE_4__","title","keywords","href","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","React","Component","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","createContext","props","Consumer","staticQueryData","data","query","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","array","arrayOf","Header","siteTitle","react_default","style","background","marginBottom","margin","maxWidth","padding","gatsby_browser_entry","color","textDecoration","listStyle","float","display","marginRight","fontSize","Layout","Fragment","header","paddingTop","_755544856","node"],"mappings":"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","file":"component---src-pages-tools-js-c19ba7ab50166db16eb3.js","sourcesContent":["import React from 'react'\nimport { Link } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nclass Tools extends React.Component{\n    constructor() {\n        super()\n        this.state = { count: 0 }\n    }\n    render() {\n        return(\n            <Layout> \n            <SEO title=\"Home\" keywords={[`gatsby`, `application`, `react`]} /> \n            <h1>Tools</h1> \n            <p>Based on <a href = \"https://www.w3.org/TR/WCAG21/\"> WCAG 2.1</a>, here is a compilation of resources and tools that are organized by each guideline.</p>\n            <h2>Perceivable</h2> \n            <p> WCAG Guideline: \"Information and user interface components must be presentable to users in ways they can perceive.\"<p/> \n            <p> What it means: Users, regardless of disability, need to be able to use your application and access all content.</p>\n            <p> What you need to do: You must provide text alternatives for any non-text content and make it easier for visually or audibly impaired users to access your content. </p>\n         \n            <Link to=\"/perceivable\">toolkit</Link> </p>\n            <h2> Operable</h2>\n            <p><Link to=\"/operable\">toolkit</Link></p>\n            <h2> Understandable</h2>\n            <p><Link to=\"/understandable\">toolkit</Link></p>\n            <h2>Conformance</h2> \n            <p><Link to=\"/conformance\">toolkit</Link></p>\n            </Layout> \n          \n        )\n    }\n}\nexport default Tools","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: `blue`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n        <ul style={{ listStyle: 'none', float: 'right'}}>\n          <li style={{ display: 'inline-block', marginRight: '1rem'}}><Link style={{color: 'white', textDecoration: 'none', fontSize: 'x-large'}} to=\"/\">Home</Link></li>\n          <li style={{ display: 'inline-block', marginRight: '1rem'}}><Link style={{color: 'white', textDecoration: 'none', fontSize: 'x-large'}} to=\"/about\">About</Link></li>\n          <li style={{ display: 'inline-block', marginRight: '1rem'}}><Link style={{color: 'white', textDecoration: 'none', fontSize: 'x-large'}} to=\"/tools\">Tools</Link></li>\n        </ul>\n      </h1>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: `0 auto`,\n            maxWidth: 960,\n            padding: `0px 1.0875rem 1.45rem`,\n            paddingTop: 0,\n          }}\n        >\n          <main>{children}</main>\n\n           <footer>\n          {/* <Footer></Footer> */}\n          </footer> \n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}